import React, {useEffect, useState} from 'react';
import styles from "../../styles/website/ProductPage.module.css"
import Image from "next/image";
import mask from "../../public/img/WEB-Zensee-Pro-M1010S-QBA.jpg"
import {useRouter} from "next/router";
import Head from "next/head";
import {FavoriteBorderOutlined} from "@mui/icons-material";
import Modal from "../../components/Modal";
import axios from "axios";
import {addProduct, newId} from "../../redux/cartSlice";
import {useDispatch, useSelector} from "react-redux";
import {setFavorites} from "../../redux/apiCalls";
import {addFavorite, removeFavorite} from "../../redux/favoriteSlice";
import {AddToCart, FavoriteButton} from "../../components/actions/Buttons";
import {newCart} from "../../redux/apiCalls";
import {getSession, useSession} from "next-auth/react";
import useToggle from "../../components/hooks/useToggle";
import VendorLogos from "../../components/website/VendorLogos";

const Product = ({product, images}) => {
    const {data: session} = useSession()
    const router = useRouter()
    const {params} = router.query
    const [quantity, setQuantity] = useState(1)
    const [productId, setProductId] = useState(product._id)
    const [color, setColor] = useState('')
    const [size, setSize] = useState('')
    const [showModal, setShowModal] = useToggle()
    const [disabled, setDisabled] = useState(false)
    const [index, setIndex] = useState(0)
    const [title, setTitle] = useState('')
    const [cart, setCart] = useState('')
    const [favoriteCart, setFavoriteCart] = useState('')

    const dispatch = useDispatch();
    const favs = useSelector(state=>state.favorite.favorites)

    useEffect(async()=>{
     try{
         const res = await axios.get(`http://localhost:3000/api/cart?cart=${session.id}`)
         const favorite = await axios.get(`http://localhost:3000/api/favorite?favorite=${session.id}`)
         setCart(res.data)
         setFavoriteCart(favorite.data)
     }catch(err){
         console.log(err)
     }
    },[session])

    const handleClick = async(request) => {
       if(request !=='Photo'){

           await newCart(dispatch, {productId, color, size, quantity, name: product.name, img: product.img[0], price: product.price, modelId: product.modelId}, session, cart)
       }

      setShowModal();
    };

    const handlePhoto = (idx) => {
        setIndex(idx)
    };


    const handleChange = (e) => {
        const {name, value} = e.target

   if(name ==='size'){
       setSize(value)
   }
   if(name==='color'){
       setColor(value)
   }
}

    console.log(Object.keys(product).includes('color'))

    return (
        <>
            <Modal showModal={showModal} setShowModal={setShowModal} title={title} img={`/img/${product.img[index]}`} pic={product.img} size={size} color={color} product={product} quantity={quantity}/>
        <div className={styles.container}>
            <Head>
                <title>RnG Diving</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div className={styles.top}>
                <div className={styles.left}>
                    <div className={styles.topImage}>
                        <Image className={styles.img} src={`/img/${product.img[index]}`} alt="" height={350} width={350}  objectFit="contain" onClick={()=>{
                            setTitle('Photo'),
                                handleClick('Photo')
                        }}/>
                    </div>

                    <div className={styles.thumbnail}>
                        {product.img.length > 1 && product.img.map((picture, idx)=>(
                            <Image className={styles.img} key={product.img._id} value={idx} src={`/img/${picture}`} alt="" height={100} width={100} objectFit="contain" onClick={()=>handlePhoto(idx)}/>
                        ))}


                    </div>
                </div>
                <div className={styles.right}>
                    <h1 className={styles.title}>{product.manufacturer}</h1>
                    <h1 className={styles.title}>{product.name}</h1>
                    <h2 className={styles.price}>€{product.price.toFixed(2)}</h2>
                    <span className={styles.model}>Model Number: {product.modelId}</span>
                    <p className={styles.desc}>{product.desc}
                    </p>

                        <div className={styles.sizeContainer}>
                            {product.color.length > 0 &&
                                <>
                                <span className={styles.optionText}>Color:</span>

                                <span className={styles.optionText}>
                                    <select name="color" required onChange={handleChange} className={styles.option}>
                                <option value=""></option>
                                        {product.color.map((color, idx)=>(
                                            <option key={idx} value={color}>{color}</option>
                                        ))}
                                    </select>
                                </span>
                                </>
                                }
                            {product.size.length > 0 &&
                                <>
                            <span className={styles.optionText}>Size:</span>
                            <span className={styles.optionText}> <select name="size" required onChange={handleChange} className={styles.option}>
                               <option value=""></option>
                                {product.size.map((size, idx)=>(
                                    <option key={idx} value={size}>{size}</option>
                                ))}

                           </select>
                            </span>
                                </>
                            }
                        </div>
                    <div className={styles.buttonContainer}>
                        <AddToCart quantity={quantity} setQuantity={setQuantity} max={product.stock} handleClick={handleClick} setTitle={setTitle}/>
                        <FavoriteButton dispatch={dispatch} product={product} quantity={quantity} favs={favs}  favoriteCart={favoriteCart} session={session}/>
                    </div>
                    <div className={styles.bottom}>

                        <div className={styles.bottomRight}>
                            <h2>Ordering Information</h2>
                            <ul>
                                <li>
                                    *Same Day Shipping
                                </li>
                                <li>
                                    Free Shipping for orders over €70.00
                                </li>
                                <li>
                                    Free Returns
                                </li>
                                <li>
                                    Pay with iDeal, credit card, or in store
                                </li>
                            </ul>

                        </div>
                    </div>
                </div>

            </div>


            <VendorLogos logos={images}/>
        </div>
        </>
    );
};

export default Product;
Product.layout = "L3";

export const getServerSideProps = async ({params}) =>{

    const res = await axios.get(`http://localhost:3000/api/products/${params.params[1]}`);
    const img = await axios.get(`http://localhost:3000/api/images`);
    return{
        props:{
            product: res.data,
            images: img.data,


        }
    }
}
